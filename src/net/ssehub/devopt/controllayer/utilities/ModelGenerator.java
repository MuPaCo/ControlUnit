/*
 * Copyright 2022 University of Hildesheim, Software Systems Engineering
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE
 * file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
package net.ssehub.devopt.controllayer.utilities;

/**
 * This class supports the creation of IVML models describing an entity based on the DevOpt meta model. Models
 * generated by this class can be used to register entities at the controller at runtime.
 *  
 * @author kroeher
 *
 */
public class ModelGenerator {
    
    /**
     * Generates an IVML model string, which uses the given parameters to customize that model. The generated model is
     * a description of an entity based on the DevOpt meta model, which the controller shall supervise. The caller of
     * this method must guarantee their uniqueness in order to not cause errors or rejections by the controller and its
     * components.
     * 
     * @param entityIdentifier the unique identifier used as project name (adding <i>Model</i> to the end of the given
     *        string) and entity name as well as its identifier for the identification description
     * @param entityHost the URL or IP address used as host for the identification description
     * @param entityPort the port number used as port for the identification description
     * @param monitoringChannel the channel (MQTT topic or HTTP context) used as monitoring channel for the runtime
     *        description
     * @param monitoringHost the URL or IP address used as monitoring host for the runtime description
     * @param monitoringPort the port number used as port for the runtime description
     * @return the generated IVML model
     */
    //checkstyle: stop parameter number check
    public static String generate(String entityIdentifier, String entityHost, int entityPort,
            String monitoringChannel, String monitoringHost, int monitoringPort) {
        String model = 
                  "project " + entityIdentifier + "Model {\r\n"
                + "\r\n"
                + "    import DevOpt_System;\r\n"
                + "    \r\n"
                + getIdentificationDescription(entityIdentifier, entityHost, entityPort)
                + "    \r\n"
                + getRuntimeDescription(monitoringChannel, monitoringHost, monitoringPort)
                + "    \r\n"
                + "    EntityDescription entityDescription = {\r\n"
                + "        identificationDescription,\r\n"
                + "        runtimeDescription\r\n"
                + "    };\r\n"
                + "    \r\n"
                + "    Entity entity = {\r\n"
                + "        name = \"" + entityIdentifier + "\",\r\n"
                + "        description = entityDescription\r\n"
                + "    };\r\n"
                + "    \r\n"
                + "}";
        return model;
    }
    //checkstyle: resume parameter number check
    
    /**
     * Generates the identification description part of an entity model following the DevOpt meta model.
     * 
     * @param identifier the unique string used as identifier of the entity
     * @param host the URL or IP address used as host (address) of the entity
     * @param port the port number used as part of the host (address) of the entity
     * @return the generated identification description
     */
    private static String getIdentificationDescription(String identifier, String host, int port) {
        String identificationDescription =
                  "    Identification entityIdentification = {\r\n"
                + "        identifier = \"" + identifier + "\",\r\n"
                + "        host = \"" + host + "\",\r\n"
                + "        port = " + port + "\r\n"
                + "    };\r\n"
                + "\r\n"
                + "    IdentificationDescription identificationDescription = {\r\n"
                + "        description = entityIdentification\r\n"
                + "    };\r\n";
        return identificationDescription;
    }
    
    /**
     * Generates the runtime description part of an entity model following the DevOpt meta model.
     * 
     * @param channel the channel (MQTT topic or HTTP context) on which the entity sends its runtime data
     * @param host the URL or IP address of the target (MQTT broker or HTTP server) to which the entity sends its
     *        runtime data
     * @param port the port number of the host where the entity sends its runtime data
     * @return the generated runtime description
     */
    private static String getRuntimeDescription(String channel, String host, int port) {
        String runtimeDescription =
                  "    IntegerParameter entityPowerBalance = {\r\n"
                + "        name = \"Power Balance\",\r\n"
                + "        value = null\r\n"
                + "    };\r\n"
                + "    \r\n"
                + "    RuntimeDate entityMonitoring = {\r\n"
                + "        timestamp = null,\r\n"
                + "        monitoringScope = \"" + channel + "@" + host + ":" + port + "\",\r\n"
                + "        value = entityPowerBalance,\r\n"
                + "        expressions = null\r\n"
                + "    };\r\n"
                + "    \r\n"
                + "    RuntimeDescription runtimeDescription = {\r\n"
                + "        description = entityMonitoring\r\n"
                + "    };\r\n";
        return runtimeDescription;
    }
    
}
