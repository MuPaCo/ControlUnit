/**
 * This project defines modeling elements, which are used to define 
 * information about the identification of entities.
 */
project DevOpt_Identification {
    
    import DevOpt_Basics;
    
    // In general, elements in this project are bound at compile time.
    annotate BindingTime bt = BindingTime.COMPILE to DevOpt_Identification;    
    
    /*
     * The constant pattern for checking whether a given string is a valid
     * URL.
     */
    const String URL_PATTERN = "^(https?|ftp|file)://" +
            "[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]";
    
    /*
     * The constant pattern for checking whether a given string is a valid
     * IPv4 address.
     */    
    const String IPV4_PATTERN = "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|" +
            "2[0-4][0-9]|25[0-5])(\\.(?!$)|$)){4}$";
    
    /*
     * The constant pattern for checking whether a given string is a valid
     * IPv6 address using standard notation.
     */
    const String IPV6_PATTERN = "^(?:[A-F0-9]{1,4}:){7}[A-F0-9]{1,4}$";
    
    /*
     * This type enables the definition of a network host as a string,
     * which always must match the "localhost"-value, URL, IPv4, or IPv6
     * pattern.
     */
    typedef Host String with (Host.matches("localhost")
            or Host.matches(URL_PATTERN)
            or Host.matches(IPV4_PATTERN)
            or Host.matches(IPV6_PATTERN));

    /*
     * This type enables the definition of a network port as an integer,
     * which always must have a value between 1 and 65535.
     */
    typedef Port Integer with (Port > 0 and Port < 65536);            
    
    
    compound Identification {
        // The (unique) identifier, like a MAC address.
        NonEmptyString identifier;
        // The host name or IP address.
        Host host;
        // The host port.
        Port port;
    }
    
}